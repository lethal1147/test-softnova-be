// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  user
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  role      UserRole  @default(user)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  carts           Cart[]
  BookTransaction BookTransaction[]

  @@index([id])
  @@index([email])
}

model Book {
  id        Int       @id @default(autoincrement())
  name      String
  author    String
  price     Decimal   @db.Decimal(10, 2)
  bookImage String    @db.Text()
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  carts                Cart[]
  bookTransactionItems BookTransactionItem[]

  @@index([id])
}

model Cart {
  id        Int      @id @default(autoincrement())
  qty       Int
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  bookId    Int
  book      Book     @relation(fields: [bookId], references: [id])
  createdAt DateTime @default(now())

  @@index([userId])
}

model BookTransaction {
  id                  Int                   @id @default(autoincrement())
  userId              Int
  user                User                  @relation(fields: [userId], references: [id])
  total               Decimal
  discount            Decimal
  createdAt           DateTime              @default(now())
  bookTransactionItem BookTransactionItem[]

  @@index([userId])
}

model BookTransactionItem {
  id            Int             @id @default(autoincrement())
  bookId        Int
  book          Book            @relation(fields: [bookId], references: [id])
  price         Decimal
  qty           Int
  transactionId Int
  transaction   BookTransaction @relation(fields: [transactionId], references: [id])

  @@index([transactionId])
}
